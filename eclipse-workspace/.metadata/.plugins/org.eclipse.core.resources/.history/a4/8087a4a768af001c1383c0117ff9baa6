package tree;

//import tree.binary;
import tree.binary.node;

public class BST {
	public static class node{
		int data;
		node left;
		node right;
		
		public node() {
			
		}
		
		public node(int value,node left,node right)
		{
			this.data= value;
			this.left = left;
			this.right=right;
			
		}	
	}
	
	public static node constructor(int left,int right,int[] array)
	{
		if(left>right)
		{
			return null;
		}
		
		int mid=(left+right)/2;
		int value=array[mid];
		
	
		node ln=constructor(left,mid-1,array);
		node rn= constructor(mid+1,right,array );
		
		node temp= new node(value,ln,rn);
		
		return temp;
	}
	
	public static void display(node root)
	{
		if(root == null)
		{
			return;	
		}
		
		String str = "<-"+ root.data +"->";
		str+= (root.left == null)?".":"left value"+root.left.data;
		str+=(root.right == null)? ".": "right value"+root.right.data;

		System.out.println(str);
		display(root.left);
		display(root.right);
	}
	
	public static int max(node temp)
	{
		int max=temp.data;
		if(temp.left == null && temp.right == null)
		{
			return temp.data;
			
		}
		
		int leftv=(temp.left == null)?0:max(temp.left);
		int rightv= (temp.right == null)? 0: max(temp.right );
		
		if(leftv > rightv)
		{
			if(leftv>max)
			{
				max = leftv;
			}
			
		}
		else {
			if(rightv>max)
			{
				max = rightv;
			}
		}
		
		return max;
	}
	
	public static int min (node temp)
	{
		int min =temp.data;
		if(temp.left == null && temp.right==null)
			{
				return min;
			}
		
		int leftv=(temp.left == null)?temp.data:min(temp.left);
		int rightv= (temp.right == null)?temp.data: min(temp.right );
		
		if(leftv < rightv)
		{
			if(leftv <min)
			{
				min = leftv;
			}
			
		}
		else {
			if(rightv < min)
			{
				min = rightv;
			}
		}
		return min;
	}
	
	public static int sum(node temp)
	{
		int sum=temp.data;
		
		if(temp.left == null && temp.right == null)
		{
			return temp.data;
		}
		
		int suml = (temp.left == null) ? temp.data : sum(temp.left);
		int sumr = (temp.right == null) ? 0 : sum(temp.right);
		
		sum= suml+sumr;
		
		return sum;
		
	}

	public static void main(String[] arar)
	{
		//binary bin = new binary();
		int[] arr = {1,2,3,4,5,6,7,8,9};
		node root = constructor(0,arr.length-1,arr);
		display(root);
		System.out.print("max -> "+max(root)+" min ->" + min(root)+"sum -> " + sum(root));
	}
	
}
